badger
======

*badger* helps you with your every-day batch work.

If you're processing series of data and want to do some task for a bunch of
files in the same directory and end up writing a one-off Python script to do
this processing, then this might be for you.

Because, sometimes, you just want to do look at one file. Or you want to do
something a little bit differently this time. I suppose you'll mostly end up
making tiny modifications to your script, saving it and running it again. Maybe
you'll also comment out a line of code here and there. That's a bit tedious,
don't you think?

Badger is a command-line utility that takes care of these tiny modifications.
Just write a Python script like this:

```
# myscript.py

def input_file(index):
    return "input_{:04d}.dat".format(index)

def output_file(index):
    return "input_{:04d}.dat".format(index)

def process(input_file, output_file):
    # Do some processing here...

```

Now you can use badger to run your script:

```
badger myscript series 0 100

```

This will run the `process` function with filenames generated by `input_file`
and `output_file` for indices between 0 and 100.

If you just want to process one of them, say no. 42, just call

```
badger myscript single 42

```

When the input data is slowly being generated one file at a time (say, by some
simulation), you can also process each new file as it comes in using the `poll`
command:

```
badger myscript poll

```

You can bundle different variations of your script's processing task in class
instances like so:

```
# variants.py
class Task(object):
    def __init__(self, flag):
        self.flag = flag
    # input_file, output_file...
    def process(self, input_file, output_file):
        if self.flag:
            # Flagged variant...
        elif self.flag:
            # Non-flagged variant...

flag = Task(True)
noflag = Task(False)

```

Both are accessible via badger:

```
badger variants:flag poll
badger variants:noflag single 15

```


License
-------

*badger* is released under the `GNU General Public License 3.0
<https://www.gnu.org/licenses/gpl-3.0.txt>`_. Copyright (c) 2014 Eduard Bopp.
You can contact the author via email (`eduard.bopp@aepsil0n.de`_).

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program.  If not, see <http://www.gnu.org/licenses/>.
